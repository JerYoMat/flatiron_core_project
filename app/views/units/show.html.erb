<div id="pseudo-root" data-first="yes" data-current-unit="">
</div>

<script>
const pseudoRoot = document.getElementById('pseudo-root')
const currentUnitElement = pseudoRoot.getAttribute('data-current-unit')
let unitId = (currentUnitElement === "" ? Number(window.location.pathname.split("/units/")[1]) : currentUnitElement) 

const createUnit = (data) => {
  const unit = new Unit(data.id, data.title, data.image, data.topics)
  $('#pseudo-root').append(unit.startTemplate())
}

function getAndRenderUnitData(integer) {
  $.getJSON(`${integer}/first_call`,'', createUnit)  
}


  getAndRenderUnitData(unitId)







  
class Unit {
  constructor(id, title, image, topics) {
    this.id = id;
    this.title = title;
    this.topics = topics;
    this.imageName = image;
  }
  startTemplate() {
    return (`
  <h1>${this.title}</h1>
  <br id="middle">
  <div class="row">
    <div class="col-md-4">
    <ul id="topics_container" class="list-group">
      ${this.formatTopicTitles()}
    </ul>
    </div>
    <div id="tip_holder" class="col-md-8 card">
      <div class="place_for_tips">
      </div>
    </div>
  </div>`
  )
  }  
  formatTopicTitles() {
    const topicTitle = []
    this.topics.forEach((top) => {
      const title =`<li topic-id="${top.id}" class="list-group-item">${top.title}</li>` 
      topicTitle.push(title)
    });
    return topicTitle.join('')
  }
}


</script>

<style>
   
    img{ 
        display: block;
        margin-top: 5%;
        margin-right: auto;
        margin-left: auto;
        width: 30%;
        max-width: 150px;
    }
    div#tip_holder {border: 1px solid rgba(0, 0, 0, 0.125);
                    padding: 0;}

    

  
</style>