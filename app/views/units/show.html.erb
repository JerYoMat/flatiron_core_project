<button id="myBtn">Open Modal</button>

<!-- The Modal -->
<div id="myModal" class="modal">
  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
    <div class="card">
<article class="card-body">
	<h4 class="card-title text-center mb-4 mt-1">Sign in</h4>
	<hr>
	<form>
	<div class="form-group">
	<div class="input-group">
		<div class="input-group-prepend">
		    <span class="input-group-text"> <i class="fa fa-user"></i> </span>
		 </div>
		<input name="" class="form-control" placeholder="Email or login" type="email">
	</div> <!-- input-group.// -->
	</div> <!-- form-group// -->
	<div class="form-group">
	<div class="input-group">
		<div class="input-group-prepend">
		    <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
		 </div>
	    <input class="form-control" placeholder="******" type="password">
	</div> <!-- input-group.// -->
	</div> <!-- form-group// -->
	<div class="form-group">
	<button type="submit" class="btn btn-primary btn-block"> Login  </button>
	</div> <!-- form-group// -->
	</form>
</article>
</div> <!-- card.// -->
  </div>
</div>

<!--Modal Above-->
<div id="pseudo-root">
</div>

<script>
const pseudoRoot = $('#pseudo-root');
let unitId = Number(window.location.pathname.split("/units/")[1]);
let topicList = [];

function getCreateAndRenderUnit() {
  //get data for the specified unit using the global variable unitId
  fetch(`${unitId}/first_call`)
    .then(function(unitData) { //convert response to JSON
      return unitData.json();
    })
    .then(function(unitData){  //create unit object to satisfy show req
      const unit = new Unit(unitData);
      const baseTemplate = unit.baseTemplate();
      $(pseudoRoot).html(baseTemplate); //append data to DOM
    })
    .then(function() {
      $('#next-unit').click(loadNextUnit);
      $('#prev-unit').click(loadPrevUnit);
    })
}
      const loadNextUnit = () => {
        unitId === 14 ? unitId=1 : unitId++
        topicList = [];
        showUnitAndTopics();
      }

      const loadPrevUnit = () => {
        unitId === 1 ? unitId=14 : unitId--
        topicList = [];
        showUnitAndTopics();
      }


function getAndCreateTopics() {
  fetch(`${unitId}/topics`)
    .then(function(topicsData){
      return topicsData.json();
    })
    .then(function(topicsData) {
      let topicTitleString = ''
      topicsData.forEach((topicData) => {
        const topic = new Topic(topicData);
        topicList.push(topic)
        topicTitle = topic.formatTopicTitle();
        topicTitleString += topicTitle;
      });
      $("#topics_container").html(topicTitleString);
    })
    .then(function() {
        $("li").each(function() {
          $(this).click(()=>{
          $('li').removeClass("active");
          $(this).addClass('active');
          });
          $(this).click(createAndLoadTips);
        });
        $("i").click(loadTipForm)
    })
}

const loadTipForm = (evt) => {
  let topicId = $(evt.target.parentNode).attr('topic-id')
  const selectedTopic = topicList.filter( t => t.id == topicId
  )[0];
  
}

function createAndLoadTips() {
  let topicId = this.getAttribute('topic-id')
  const selectedTopic = topicList.filter( t => t.id == topicId
  )[0];
  $(".place_for_tips").empty()
  selectedTopic.tips.forEach((tipData)=>{
    tip = new Tip(tipData)
    $(".place_for_tips").append(tip.formatTip()); 
  })
}


async function showUnitAndTopics() {
 let promise = new Promise((resolve, reject) => {
    resolve(getCreateAndRenderUnit())
 });
 await promise;
 getAndCreateTopics()
}

//What runs on page load
$(document).ready(function() {
  showUnitAndTopics();
})







class Unit {
  constructor(arg) {
    this.id = arg.id;
    this.title = arg.title;
    this.imageName = arg.image_path;
  }
  baseTemplate() {
    return (`
      <img src=/assets/${this.imageName}>
      <h1>${this.title}</h1><br>
      <button id='prev-unit'>Previous Unit</button>
      <button id='next-unit'>Next Unit</button>
      <div class="row">
        <div class="col-md-4">
          <ul id="topics_container" class="list-group">
          </ul>
        </div>
        <div id="tip_holder" class="col-md-8 card">
          <div class="place_for_tips">
          </div>
        </div>
      </div>`
  )
  }   
}

class Topic {
  constructor(arg) {
    this.id = arg.id;
    this.title = arg.title;
    this.courseOrder = arg.course_order;
    this.tips = arg.tips
  }
  formatTopicTitle() {
      return `<li topic-id="${this.id}" class="list-group-item">${this.title}</li>` 
  }
}

class Tip {
  constructor(arg) {
    this.id = arg.id;
    this.title = arg.title;
    this.link = arg.link;
    this.resource_type = arg.resource_type;
    this.time_requirement = arg.time_requirement;
  }
  formatTip(){
    return `<div class='card'>
      <div class='card-body'>
        <h5 class='card-title'>${this.title}</h5>
        <p>${this.link}</p>
        <p>${this.resource_type}</p>
        <p>${this.time_requirement}</p>
      </div>
    </div>`
  }
}
const loginForm = () => (`

`)

// Get the modal
const modal = document.getElementById('myModal');

// Get the button that opens the modal
const btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
const span = document.getElementsByClassName("close")[0];

// When the user clicks on the button, open the modal 
btn.onclick = function() {
  modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}
</script>

<style>
   
    img{ 
        display: block;
        margin-top: 5%;
        margin-right: auto;
        margin-left: auto;
        width: 30%;
        max-width: 150px;
    }
    div#tip_holder {border: 1px solid rgba(0, 0, 0, 0.125);
                    padding: 0;}

    i{
      position: relative;
      float: right;
    }

  
</style>